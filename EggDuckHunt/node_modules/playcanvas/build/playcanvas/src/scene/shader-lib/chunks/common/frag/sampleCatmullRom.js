var sampleCatmullRomPS = "\nvec4 SampleTextureCatmullRom(TEXTURE_ACCEPT(tex), vec2 uv, vec2 texSize) {\n	vec2 samplePos = uv * texSize;\n	vec2 texPos1 = floor(samplePos - 0.5) + 0.5;\n	vec2 f = samplePos - texPos1;\n	vec2 w0 = f * (-0.5 + f * (1.0 - 0.5 * f));\n	vec2 w1 = 1.0 + f * f * (-2.5 + 1.5 * f);\n	vec2 w2 = f * (0.5 + f * (2.0 - 1.5 * f));\n	vec2 w3 = f * f * (-0.5 + 0.5 * f);\n	vec2 w12 = w1 + w2;\n	vec2 offset12 = w2 / (w1 + w2);\n	vec2 texPos0 = (texPos1 - 1.0) / texSize;\n	vec2 texPos3 = (texPos1 + 2.0) / texSize;\n	vec2 texPos12 = (texPos1 + offset12) / texSize;\n	vec4 result = vec4(0.0);\n	result += texture2DLod(tex, vec2(texPos0.x, texPos0.y), 0.0) * w0.x * w0.y;\n	result += texture2DLod(tex, vec2(texPos12.x, texPos0.y), 0.0) * w12.x * w0.y;\n	result += texture2DLod(tex, vec2(texPos3.x, texPos0.y), 0.0) * w3.x * w0.y;\n	result += texture2DLod(tex, vec2(texPos0.x, texPos12.y), 0.0) * w0.x * w12.y;\n	result += texture2DLod(tex, vec2(texPos12.x, texPos12.y), 0.0) * w12.x * w12.y;\n	result += texture2DLod(tex, vec2(texPos3.x, texPos12.y), 0.0) * w3.x * w12.y;\n	result += texture2DLod(tex, vec2(texPos0.x, texPos3.y), 0.0) * w0.x * w3.y;\n	result += texture2DLod(tex, vec2(texPos12.x, texPos3.y), 0.0) * w12.x * w3.y;\n	result += texture2DLod(tex, vec2(texPos3.x, texPos3.y), 0.0) * w3.x * w3.y;\n	return result;\n}\n";

export { sampleCatmullRomPS as default };
