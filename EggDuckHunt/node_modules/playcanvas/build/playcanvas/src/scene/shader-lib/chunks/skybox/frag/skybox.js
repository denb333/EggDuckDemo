var skyboxPS = '\n	#include "envMultiplyPS"\n	#include "gammaPS"\n	#include "tonemappingPS"\n	varying vec3 vViewDir;\n	uniform float skyboxHighlightMultiplier;\n	#ifdef SKY_CUBEMAP\n		uniform samplerCube texture_cubeMap;\n		#ifdef SKYMESH\n			varying vec3 vWorldPos;\n			uniform mat3 cubeMapRotationMatrix;\n			uniform vec3 projectedSkydomeCenter;\n		#endif\n	#else\n		#include "sphericalPS"\n		#include "envAtlasPS"\n		uniform sampler2D texture_envAtlas;\n		uniform float mipLevel;\n	#endif\n	void main(void) {\n		#ifdef SKY_CUBEMAP\n			#ifdef SKYMESH\n				vec3 envDir = normalize(vWorldPos - projectedSkydomeCenter);\n				vec3 dir = envDir * cubeMapRotationMatrix;\n			#else\n				vec3 dir = vViewDir;\n			#endif\n			dir.x *= -1.0;\n			vec3 linear = __INJECT_SKYBOX_DECODE_FNC(textureCube(texture_cubeMap, dir));\n		#else\n			vec3 dir = vViewDir * vec3(-1.0, 1.0, 1.0);\n			vec2 uv = toSphericalUv(normalize(dir));\n			vec3 linear = __INJECT_SKYBOX_DECODE_FNC(texture2D(texture_envAtlas, mapRoughnessUv(uv, mipLevel)));\n		#endif\n		if (any(greaterThanEqual(linear, vec3(64.0)))) {\n			linear *= skyboxHighlightMultiplier;\n		}\n		gl_FragColor = vec4(gammaCorrectOutput(toneMap(processEnvironment(linear))), 1.0);\n	}\n';

export { skyboxPS as default };
